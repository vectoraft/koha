/* Icon Components */
@layer components {
  /* Base icon styles */
  .icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 1rem;
    height: 1rem;
    stroke-width: 2;
    stroke: currentColor;
    fill: none;
    flex-shrink: 0;
  }
  
  /* Icon sizes */
  .icon-xs {
    width: 0.75rem;
    height: 0.75rem;
  }
  
  .icon-sm {
    width: 1rem;
    height: 1rem;
  }
  
  .icon-md {
    width: 1.25rem;
    height: 1.25rem;
  }
  
  .icon-lg {
    width: 1.5rem;
    height: 1.5rem;
  }
  
  .icon-xl {
    width: 2rem;
    height: 2rem;
  }
  
  .icon-2xl {
    width: 2.5rem;
    height: 2.5rem;
  }
  
  /* Icon with background */
  .icon-circle {
    border-radius: 50%;
    padding: 0.5rem;
    background-color: hsl(var(--muted));
  }
  
  .icon-square {
    border-radius: var(--radius);
    padding: 0.5rem;
    background-color: hsl(var(--muted));
  }
  
  /* Icon variants */
  .icon-primary {
    color: hsl(var(--primary));
  }
  
  .icon-secondary {
    color: hsl(var(--secondary));
  }
  
  .icon-success {
    color: hsl(142 76% 36%);
  }
  
  .icon-warning {
    color: hsl(38 92% 50%);
  }
  
  .icon-error {
    color: hsl(var(--destructive));
  }
  
  .icon-muted {
    color: hsl(var(--muted-foreground));
  }
  
  /* Icon with text */
  .icon-text {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
  }
  
  .icon-text-reverse {
    display: inline-flex;
    align-items: center;
    flex-direction: row-reverse;
    gap: 0.5rem;
  }
  
  /* Icon button */
  .icon-button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 2.5rem;
    height: 2.5rem;
    background-color: transparent;
    border: none;
    border-radius: var(--radius);
    color: hsl(var(--muted-foreground));
    cursor: pointer;
    transition: all var(--animation-duration) var(--animation-easing);
  }
  
  .icon-button:hover {
    background-color: hsl(var(--muted));
    color: hsl(var(--foreground));
  }
  
  .icon-button:active {
    transform: scale(0.95);
  }
  
  .icon-button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    pointer-events: none;
  }
  
  /* Icon button sizes */
  .icon-button-sm {
    width: 2rem;
    height: 2rem;
  }
  
  .icon-button-lg {
    width: 3rem;
    height: 3rem;
  }
  
  /* Icon button variants */
  .icon-button-primary {
    background-color: hsl(var(--primary));
    color: hsl(var(--primary-foreground));
  }
  
  .icon-button-primary:hover {
    background-color: hsl(var(--primary) / 0.8);
  }
  
  .icon-button-secondary {
    background-color: hsl(var(--secondary));
    color: hsl(var(--secondary-foreground));
  }
  
  .icon-button-secondary:hover {
    background-color: hsl(var(--secondary) / 0.8);
  }
  
  .icon-button-outline {
    border: 1px solid hsl(var(--border));
    background-color: transparent;
    color: hsl(var(--foreground));
  }
  
  .icon-button-outline:hover {
    background-color: hsl(var(--muted));
    border-color: hsl(var(--primary));
  }
  
  .icon-button-ghost {
    background-color: transparent;
    color: hsl(var(--foreground));
  }
  
  .icon-button-ghost:hover {
    background-color: hsl(var(--muted));
  }
  
  /* Glass icon button */
  .icon-button-glass {
    background: var(--glass-bg);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border: 1px solid var(--glass-border);
    color: hsl(var(--foreground));
  }
  
  .icon-button-glass:hover {
    background: rgba(255, 255, 255, 0.2);
    transform: translateY(-2px);
  }
  
  /* Neumorphic icon button */
  .icon-button-neomorph {
    background: var(--neomorph-bg);
    border: none;
    box-shadow: 
      6px 6px 12px var(--neomorph-shadow-dark),
      -6px -6px 12px var(--neomorph-shadow-light);
    color: hsl(var(--foreground));
  }
  
  .icon-button-neomorph:hover {
    box-shadow: 
      4px 4px 8px var(--neomorph-shadow-dark),
      -4px -4px 8px var(--neomorph-shadow-light);
  }
  
  .icon-button-neomorph:active {
    box-shadow: 
      inset 3px 3px 6px var(--neomorph-shadow-dark),
      inset -3px -3px 6px var(--neomorph-shadow-light);
  }
  
  /* Loading icon */
  .icon-loading {
    animation: spin 1s linear infinite;
  }
  
  /* Icon group */
  .icon-group {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }
  
  .icon-group-vertical {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
  }
  
  /* Icon with badge */
  .icon-badge {
    position: relative;
    display: inline-flex;
  }
  
  .icon-badge::after {
    content: '';
    position: absolute;
    top: -2px;
    right: -2px;
    width: 0.5rem;
    height: 0.5rem;
    background-color: hsl(var(--destructive));
    border-radius: 50%;
    border: 1px solid hsl(var(--background));
  }
  
  .icon-badge-count {
    position: relative;
    display: inline-flex;
  }
  
  .icon-badge-count::after {
    content: attr(data-count);
    position: absolute;
    top: -8px;
    right: -8px;
    min-width: 1rem;
    height: 1rem;
    background-color: hsl(var(--destructive));
    color: hsl(var(--destructive-foreground));
    font-size: 0.75rem;
    font-weight: 600;
    border-radius: 0.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0 0.25rem;
    border: 1px solid hsl(var(--background));
  }
  
  /* Icon animations */
  .icon-pulse {
    animation: pulse 2s infinite;
  }
  
  .icon-bounce {
    animation: bounce 1s infinite;
  }
  
  .icon-wiggle {
    animation: wiggle 1s ease-in-out infinite;
  }
  
  .icon-rotate {
    animation: rotate 2s linear infinite;
  }
  
  /* Status icons */
  .icon-status {
    position: relative;
    display: inline-flex;
  }
  
  .icon-status::after {
    content: '';
    position: absolute;
    bottom: -2px;
    right: -2px;
    width: 0.5rem;
    height: 0.5rem;
    border-radius: 50%;
    border: 1px solid hsl(var(--background));
  }
  
  .icon-status-online::after {
    background-color: hsl(142 76% 36%);
  }
  
  .icon-status-offline::after {
    background-color: hsl(var(--muted-foreground));
  }
  
  .icon-status-away::after {
    background-color: hsl(38 92% 50%);
  }
  
  .icon-status-busy::after {
    background-color: hsl(var(--destructive));
  }
  
  /* Icon tooltips */
  .icon-tooltip {
    position: relative;
    cursor: help;
  }
  
  .icon-tooltip::before {
    content: attr(data-tooltip);
    position: absolute;
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%);
    background-color: hsl(var(--foreground));
    color: hsl(var(--background));
    padding: 0.25rem 0.5rem;
    border-radius: var(--radius);
    font-size: 0.75rem;
    white-space: nowrap;
    opacity: 0;
    visibility: hidden;
    transition: all var(--animation-duration) var(--animation-easing);
    pointer-events: none;
    z-index: 50;
  }
  
  .icon-tooltip:hover::before {
    opacity: 1;
    visibility: visible;
    transform: translateX(-50%) translateY(-5px);
  }
  
  /* Icon library integration */
  .feather-icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 1rem;
    height: 1rem;
    stroke-width: 2;
    stroke: currentColor;
    fill: none;
    flex-shrink: 0;
  }
  
  .heroicon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 1rem;
    height: 1rem;
    stroke-width: 2;
    stroke: currentColor;
    fill: none;
    flex-shrink: 0;
  }
  
  .lucide-icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 1rem;
    height: 1rem;
    stroke-width: 2;
    stroke: currentColor;
    fill: none;
    flex-shrink: 0;
  }
  
  /* Custom icon SVG styling */
  .icon svg {
    width: 100%;
    height: 100%;
    stroke: currentColor;
    fill: none;
    stroke-width: 2;
    stroke-linecap: round;
    stroke-linejoin: round;
  }
  
  /* Icon fill variants */
  .icon-fill svg {
    fill: currentColor;
    stroke: none;
  }
  
  .icon-stroke svg {
    fill: none;
    stroke: currentColor;
  }
  
  .icon-dual svg {
    fill: currentColor;
    stroke: currentColor;
  }
}

/* Additional keyframes for icon animations */
@keyframes bounce {
  0%, 20%, 53%, 80%, 100% {
    transform: translateY(0);
  }
  40%, 43% {
    transform: translateY(-10px);
  }
  70% {
    transform: translateY(-5px);
  }
  90% {
    transform: translateY(-2px);
  }
}

@keyframes wiggle {
  0%, 7% {
    transform: rotateZ(0);
  }
  15% {
    transform: rotateZ(-15deg);
  }
  20% {
    transform: rotateZ(10deg);
  }
  25% {
    transform: rotateZ(-10deg);
  }
  30% {
    transform: rotateZ(6deg);
  }
  35% {
    transform: rotateZ(-4deg);
  }
  40%, 100% {
    transform: rotateZ(0);
  }
}

@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
